// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: boat.sc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "boat.sc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace empire {
namespace msg {
namespace sc {

namespace {

const ::google::protobuf::Descriptor* SCBoatExtraBPropertyMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SCBoatExtraBPropertyMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_boat_2esc_2eproto() {
  protobuf_AddDesc_boat_2esc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "boat.sc.proto");
  GOOGLE_CHECK(file != NULL);
  SCBoatExtraBPropertyMsg_descriptor_ = file->message_type(0);
  static const int SCBoatExtraBPropertyMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SCBoatExtraBPropertyMsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SCBoatExtraBPropertyMsg, value_),
  };
  SCBoatExtraBPropertyMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SCBoatExtraBPropertyMsg_descriptor_,
      SCBoatExtraBPropertyMsg::default_instance_,
      SCBoatExtraBPropertyMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SCBoatExtraBPropertyMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SCBoatExtraBPropertyMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SCBoatExtraBPropertyMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_boat_2esc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SCBoatExtraBPropertyMsg_descriptor_, &SCBoatExtraBPropertyMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_boat_2esc_2eproto() {
  delete SCBoatExtraBPropertyMsg::default_instance_;
  delete SCBoatExtraBPropertyMsg_reflection_;
}

void protobuf_AddDesc_boat_2esc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::empire::msg::protobuf_AddDesc_struct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rboat.sc.proto\022\021com.empire.msg.sc\032\014stru"
    "ct.proto\"Z\n\027SCBoatExtraBPropertyMsg\0220\n\004t"
    "ype\030\001 \001(\0162\".com.empire.msg.BattlePropert"
    "yType\022\r\n\005value\030\002 \001(\t", 140);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "boat.sc.proto", &protobuf_RegisterTypes);
  SCBoatExtraBPropertyMsg::default_instance_ = new SCBoatExtraBPropertyMsg();
  SCBoatExtraBPropertyMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_boat_2esc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_boat_2esc_2eproto {
  StaticDescriptorInitializer_boat_2esc_2eproto() {
    protobuf_AddDesc_boat_2esc_2eproto();
  }
} static_descriptor_initializer_boat_2esc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SCBoatExtraBPropertyMsg::kTypeFieldNumber;
const int SCBoatExtraBPropertyMsg::kValueFieldNumber;
#endif  // !_MSC_VER

SCBoatExtraBPropertyMsg::SCBoatExtraBPropertyMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SCBoatExtraBPropertyMsg::InitAsDefaultInstance() {
}

SCBoatExtraBPropertyMsg::SCBoatExtraBPropertyMsg(const SCBoatExtraBPropertyMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SCBoatExtraBPropertyMsg::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SCBoatExtraBPropertyMsg::~SCBoatExtraBPropertyMsg() {
  SharedDtor();
}

void SCBoatExtraBPropertyMsg::SharedDtor() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void SCBoatExtraBPropertyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SCBoatExtraBPropertyMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SCBoatExtraBPropertyMsg_descriptor_;
}

const SCBoatExtraBPropertyMsg& SCBoatExtraBPropertyMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boat_2esc_2eproto();
  return *default_instance_;
}

SCBoatExtraBPropertyMsg* SCBoatExtraBPropertyMsg::default_instance_ = NULL;

SCBoatExtraBPropertyMsg* SCBoatExtraBPropertyMsg::New() const {
  return new SCBoatExtraBPropertyMsg;
}

void SCBoatExtraBPropertyMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SCBoatExtraBPropertyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.empire.msg.BattlePropertyType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::empire::msg::BattlePropertyType_IsValid(value)) {
            set_type(static_cast< ::com::empire::msg::BattlePropertyType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SCBoatExtraBPropertyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.empire.msg.BattlePropertyType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SCBoatExtraBPropertyMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.empire.msg.BattlePropertyType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SCBoatExtraBPropertyMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.empire.msg.BattlePropertyType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SCBoatExtraBPropertyMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SCBoatExtraBPropertyMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SCBoatExtraBPropertyMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SCBoatExtraBPropertyMsg::MergeFrom(const SCBoatExtraBPropertyMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SCBoatExtraBPropertyMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SCBoatExtraBPropertyMsg::CopyFrom(const SCBoatExtraBPropertyMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SCBoatExtraBPropertyMsg::IsInitialized() const {

  return true;
}

void SCBoatExtraBPropertyMsg::Swap(SCBoatExtraBPropertyMsg* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SCBoatExtraBPropertyMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SCBoatExtraBPropertyMsg_descriptor_;
  metadata.reflection = SCBoatExtraBPropertyMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sc
}  // namespace msg
}  // namespace empire
}  // namespace com

// @@protoc_insertion_point(global_scope)
